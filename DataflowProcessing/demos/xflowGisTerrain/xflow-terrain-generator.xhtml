<?xml version="1.0" encoding="UTF-8"?>
 <html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <!-- Style -->

    <link rel="stylesheet" type="text/css" media="all" href="../../css/jquery-ui.css"/>
    <!-- Scripts -->
    <script type="text/javascript" src="../../deps/xml3d.js"></script>
    <script type="text/javascript" src="../../deps/jquery-1.8.1.min.js"></script>
    <script type="text/javascript" src="../../deps/jquery-ui-1.8.23.min.js"></script>
    <script type="text/javascript" src="../../deps/xml3d-camera.js"></script>

    <script type="text/javascript" src="../../deps/simplex-noise.min.js" />

    <title>XML3D Examples</title>
    <script type="text/javascript">
      // Init Slider Control
      function updateWaveConfig(){
        $("#amplitude").text($("#slider_amplitude").slider("value")/100);
        $("#wavelength").text($("#slider_wavelength").slider("value"));

        var meshSize = $("#slider_meshsize").slider("value");
        $("#size").text(meshSize);
        $("#meshsize_value").text(meshSize*meshSize);
      }

      $(function(){
        $( ".slider").slider({
          orientation: "horizontal",
          range: "min",
          slide: updateWaveConfig,
          change: updateWaveConfig
        });
        $("#slider_amplitude").slider({min : 1, max: 100, value: 0});
        $("#slider_wavelength").slider({min : 1, max: 100, value: 1});
        $("#slider_meshsize").slider({min : 10, max: 200, value: 127, step: 2});
        updateWaveConfig();
      });
    </script>

  </head>
  <body>

   <script type="text/javascript">

   </script>


  <div id="overall"><div id="content">
   <h1>
    Procedural Terrain Generator
   </h1>
    <xml3d id="myxml3d" class="xml3d" activeView="#Camera" style="background: black;" onload="getOctet();"
           xmlns="http://www.xml3d.org/2009/xml3d">
     <defs id="mainDef">
                
      <!--- Not so important part: -->
     
      <lightshader id="ls_Spot" script="urn:xml3d:lightshader:point">
       <float3 name="attenuation">1 1 1</float3>
       <float3 name="intensity">50 50 50</float3>
      </lightshader>
      
      <shader id="Material" script="urn:xml3d:shader:phong">
       <float name="ambientIntensity">1.1</float>
       <texture name="diffuseTexture">
           <!--img src="../../assets/water.jpg"/-->
           <!--<video src="../../assets/dizzy.ogv" autoplay="true"/>-->
           <img src="../../assets/terrain.jpeg"/>
       </texture>
       <float3 name="diffuseColor">1 1 1</float3>
       <float3 name="specularColor">0.5 0.5 0.5</float3>
       <float name="shininess">0.0978473581213</float>
      </shader>

      <shader id="Material2" script="urn:xml3d:shader:phong">
       <float name="ambientIntensity">1.1</float>
       <texture name="diffuseTexture">
           <!--img src="../../assets/water.jpg"/-->
           <!--<video src="../../assets/dizzy.ogv" autoplay="true"/>-->
           <img src="../../assets/terrain.jpeg"/>
       </texture>
       <float3 name="diffuseColor">1 1 1</float3>
       <float3 name="specularColor">0.5 0.5 0.5</float3>
       <float name="shininess">0.0978473581213</float>
      </shader>
     
      <transform id="t_Camera" rotation="-0.641815 0.733700 0.223063 1.145952" scale="1 1 1" translation="3.184399 3.711076 2.405665"/>
      <transform id="t_Grid" rotation="1 0.000000 0.000000 0.000000" scale="2.000000 2.000000 2.000000" translation="0.000000 0.00 0.000000"/>
      <transform id="t_Lamp" rotation="0.205942 0.331517 0.920698 1.926274" scale="1 1 1" translation="2.086632 10.648042 1.161145"/>
      
      <!-- Example Data: -->

      <data id="exampleGrid" >
        <float3 name="position">-1 0 -1  -1 0 0  -1 0 1    1 0 -1  0 0 0  0 0 1    1 0 -1  1 1 1  1 0 1</float3>
        <float3 name="normal">0 1 0  0 1 0  0 1 0    0 1 0  0 1 0  0 1 0    0 1 0  0 1 0  0 1 0</float3>
        <float2 name="texcoord">0 0  0 0.5  0 1    0.5 0  0.5 0.5  0.5 1    1 0  1 0.5  1 1</float2>
        <int name="index">0 1 3  1 3 4    1 2 4  2 4 5    3 4 6  4 6 7    4 5 7  5 7 8 </int>
      </data>

      <!-- Generate Grid: -->    

      <data id="generatedGrid" compute="(position, normal, texcoord, index) = xflow.mygrid(size)">
		    <int name="size" id="size"></int>
	    </data>

      <data id="customGeneratedGrid" compute="(position, normal, texcoord, index) = xflow.customgrid(area)">
            <int name="area" id="area">64</int>
      </data>

      <!-- Transform Grid to Waves: -->


      <data id="webclTerrain" compute="(position, normal) = xflow.clDeform(position, normal, amplitude , phase, elevation)" >
        <float name="amplitude" id="amplitude">0.01</float>
        <float name="wavelength" id="wavelength">1.0</float>
        <float name="phase" id="ph">0.0</float>
        <float3 name="elevation" id="elevation">0.0</float3>
        <data src="#customGeneratedGrid"/>
      </data>


     </defs>
     
     <view id="Camera" orientation="0.9973636865615845 0.06939224153757095 -0.021225109696388245 2.1702075620905497" position="0.3294936716556549 -11.575345039367676 -7.896969795227051"/>

     <!-- Wave Shape Display: -->

     <group shader="#Material" transform="#t_Grid">
      <mesh type="triangles">
        <data src="#webclTerrain"/>
      </mesh>
     </group>

     <!-- Light Source: -->     
     <group transform="#t_Lamp">
		<light shader="#ls_Spot"/>
     </group>
    </xml3d>

         <!--canvas id="debug" width="256" height="256" style="width:800px;height:600px;"></canvas-->

    <div class="controls" >
      <div class="option">
        <label>Amplitude</label>
        <div id="slider_amplitude" class="slider" ></div>
      </div>
      <div class="option">
        <label>Wavelength</label>
        <div id="slider_wavelength" class="slider"></div>
      </div>
      <div class="option">
        <label>Mesh Size</label>
        <div id="slider_meshsize" class="slider"></div>
        <div class="info" ><span id="meshsize_value" ></span> vertices</div>
      </div>
      <button onclick="update()">New Terrain</button>
      <button onclick="xhr.send();">Download Tile From Finland</button>
    </div>

    <script type="text/javascript">
    <![CDATA[
    /* Run timer for wave animation */
    var mytime = 0;
    var fd = null, lastTime = Date.now(), dir = new XML3DVec3(), clock = 0;
    var view = document.querySelector("view");

    var update = function() {
      var phase = document.getElementById("ph");

      if (phase && phase._configured) {
        phase.textContent = ""+mytime;
      }
      var diff = Date.now() - lastTime;
      lastTime = Date.now();
      mytime += diff / 1;
    }
    ]]>

        var littleEndian = (function() {
        var buffer = new ArrayBuffer(2);
        new DataView(buffer).setInt16(0, 256, true);
        return new Int16Array(buffer)[0] === 256;
        })();
        console.log(littleEndian);

        var elevate = {elevationBuffer: null, testBuffer: null};

        var xhr = new XMLHttpRequest();
        xhr.open("GET", "http://dev.cyberlightning.com:9091/geoserver/w3ds?version=0.4&amp;service=w3ds&amp;request=GetScene&amp;crs=EPSG:3047&amp;format=application/octet-stream&amp;layers=fiware:high_resolution&amp;boundingbox=374000,7548000,375270,7549270", true);
        xhr.responseType ="arraybuffer";

        xhr.onload = function() {
        var data = new DataView(this.response), i, dataOffset = 0;

        console.log("1. value (big endian):", data.getInt32(dataOffset, false));
        dataOffset += 4;
        console.log("2. value (big endian):", data.getInt32(dataOffset, false));
        dataOffset += 4;
        console.log("3. value (big endian):", data.getFloat64(dataOffset, false));
        dataOffset += 8;
        console.log("4. value (big endian):", data.getFloat64(dataOffset, false));
        dataOffset += 8;

        var a = [], offset, i, iterations = Math.floor((this.response.byteLength - dataOffset)/8);
        for(offset=dataOffset, i=0; i &lt; iterations; offset += 8, i++){
        a[i] = data.getFloat64(offset, false);
        }
        elevate.elevationBuffer = a;
        elevate.testBuffer = "test";
        var elevation = document.getElementById("elevation");
        elevation.textContent = a;

        var area = document.getElementById("area");
        area.textContent = (data.getInt32(0, false)/2);
        //console.log("a", a);
        //console.log(new Float64Array(a));
        //console.log("First two values:", new Int32Array(this.response, 0, 2));
        //console.log("Next two values:", new Float64Array(this.response, 8, 2));
        //console.log("Last values:", new Float64Array(this.response, 2*4 + 2*8 , (this.response.byteLength - (2*4 +2*8)) / 8))

        }



  </script>
  </div></div>
    <script type="text/javascript" src="./terrain.js" />
  </body>
 </html>

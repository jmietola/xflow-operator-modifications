               "                float4 v0 = (float4) (output[indices[tx]], output[indices[tx]+1], output[indices[tx]+2], 1.0f);",
                "                float4 v1 = (float4) (output[indices[tx+1]], output[indices[tx+1]+1], output[indices[tx+1]+2], 1.0f);",
                "                float4 v2 = (float4) (output[indices[tx+2]], output[indices[tx+2]+1], output[indices[tx+2]+2], 1.0f);",
                "                float4 normal = cross(v2-v0, v1-v0);",

                "                normals[indices[tx]] = normal.x;",
                "                normals[indices[tx]+1] = normal.y;",
                "                normals[indices[tx]+2] = normal.z;",

                "                normals[indices[tx+1]] = normal.x;",
                "                normals[indices[tx+1]+1] = normal.y;",
                "                normals[indices[tx+1]+2] = normal.z;",

                "                normals[indices[tx+2]] = normal.x;",
                "                normals[indices[tx+2]+1] = normal.y;",
                "                normals[indices[tx+2]+2] = normal.z;",


                                "                //Vertex v0;   ",
                "                output[indices[index]] = positions[indices[index]];",
                "                output[indices[index]] = elevation[indices[index]];",
                "                output[indices[index]+2] = positions[indices[index]+2];",

                "                //Vertex v1;",
                "                output[indices[index+1]] = positions[indices[index+1]];",
                "                output[indices[index+1]] = elevation[indices[index+1]];",
                "                output[indices[index+1]+2] = positions[indices[index+1]+2];",

                "                //Vertex v2;",
                "                output[indices[index+2]] = positions[indices[index+2]];",
                "                output[indices[index+2]] = elevation[indices[index+2]];",
                "                output[indices[index+2]+2] = positions[indices[index+2]+2];",

                //toimivaa

                               "                int tx = get_global_id(0)*3;",


                "                if(tx >= count*3)",
                "                        return;",
                "               int i = indices[tx]*3;",
                "               int ii = indices[tx+1]*3;",
                "               int iii = indices[tx+2]*3;",

                "                //Vertex v0;   ",
                "                output[i] = positions[i];",
                "                output[i+1] = elevation[indices[tx]];",
                "                output[i+2] = positions[i+2];",

                "                //Vertex v1;   ",
                "                output[ii] = positions[ii];",
                "                output[ii+1] = elevation[indices[tx+1]];",
                "                output[ii+2] = positions[ii+2];",

                "                //Vertex v2;   ",
                "                output[iii] = positions[iii];",
                "                output[iii+1] = elevation[indices[tx+2]];",
                "                output[iii+2] = positions[iii+2];",

                "                float4 v0 = (float4) (output[i], output[i+1], output[i+2], 1.0f);",
                "                float4 v1 = (float4) (output[ii], output[ii+1], output[ii+2], 1.0f);",
                "                float4 v2 = (float4) (output[iii], output[iii+1], output[iii+2], 1.0f);",
                "                float4 normal = cross(v2-v0, v1-v0);",

                "                normals[i] = normal.x;",
                "                normals[i+1] = normal.y;",
                "                normals[i+2] = normal.z;",

                "                normals[ii] = normal.x;",
                "                normals[ii+1] = normal.y;",
                "                normals[ii+2] = normal.z;",

                "                normals[iii] = normal.x;",
                "                normals[iii+1] = normal.y;",
                "                normals[iii+2] = normal.z;",